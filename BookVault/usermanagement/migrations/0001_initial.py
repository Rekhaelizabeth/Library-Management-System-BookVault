# Generated by Django 5.1.3 on 2024-11-20 17:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('book', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('addressline', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Librarian', 'Librarian'), ('Member', 'Member')], max_length=50)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='usermanagement.address')),
            ],
        ),
        migrations.CreateModel(
            name='MemberProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('membership_type', models.CharField(choices=[('Student', 'Student'), ('Faculty', 'Faculty'), ('General', 'General')], max_length=50)),
                ('membership_expiry', models.DateField()),
                ('borrowing_limit', models.IntegerField(default=5)),
                ('outstanding_fines', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('reserved_books_count', models.IntegerField(default=0)),
                ('notifications_preferences', models.BooleanField(default=False)),
                ('favorite_genres', models.ManyToManyField(blank=True, to='book.genre')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.user')),
            ],
        ),
        migrations.CreateModel(
            name='LibrarianProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_branch', models.CharField(blank=True, max_length=255, null=True)),
                ('specialization', models.CharField(blank=True, max_length=255, null=True)),
                ('work_schedule', models.JSONField(default=dict)),
                ('issued_books_count', models.IntegerField(default=0)),
                ('damaged_books_count', models.IntegerField(default=0)),
                ('digital_library_access', models.BooleanField(default=False)),
                ('contact_preferences', models.JSONField(default=dict)),
                ('performance_rating', models.FloatField(default=0.0)),
                ('issue_resolution_count', models.IntegerField(default=0)),
                ('last_login_time', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.user')),
            ],
        ),
        migrations.CreateModel(
            name='AdminProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.user')),
            ],
        ),
    ]
